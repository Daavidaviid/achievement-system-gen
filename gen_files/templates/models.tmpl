// Code generated by go generate; DO NOT EDIT.
// Designed by David Guerin using the data from 'rules.json'
package models

import (
	"fmt"
)

// GameStatistics contains statistics about a player such as number of attemted attacks, number of hits, etc. 
type GameStatistics struct {
	ID     string `json:"id"`
	UserID string `json:"userId"`
	GameID string `json:"gameId"`
	TeamID string `json:"teamId"`

	{{- range .Statistics.Game }}
	{{ .Name }} {{ .Type }} `json:{{ printf "%q" .Key }}` // {{ .Description }}
	{{- end }}
}

func (obj GameStatistics) String() string {
	resultFormat := `
	Player %s game stats :

	{{- range .Statistics.Game }}
	 - {{ .Description }}: %d
	{{- end }}
	 `
	result := fmt.Sprintf(
		resultFormat,
		obj.UserID,
		{{- range .Statistics.Game }}
		obj.{{ .Name }},
		{{- end }}
	)
	return result
}

type HistoricalStatistics struct {
	ID     string `json:"id"`
	UserID string `json:"userId"`

	// ######### GAME STATS SPECIFIC ########### 
	{{- range .Statistics.Game }}
	{{ .Name }} {{ .Type }} `json:{{ printf "%q" .Key }}` // {{ .Description }}
	{{- end }}

	// ######### HISTORICAL STATS SPECIFIC ########### 
	{{- range .Statistics.Historical }}
	{{ .Name }} {{ .Type }} `json:{{ printf "%q" .Key }}` // {{ .Description }}
	{{- end }}

	Achievements []Achievement `json:"achievements"`
	NewAchievements []Achievement `json:"newAchievements"`
}

func (obj HistoricalStatistics) String() string {
	resultFormat := `
	Player %s game stats :

	{{- range .Statistics.Game }}
	 - {{ .Description }}: %d
	{{- end }}

	{{- range .Statistics.Historical }}
	- {{ .Description }}: %d
	{{- end }}

	 `
	result := fmt.Sprintf(
		resultFormat,
		obj.UserID,
		{{- range .Statistics.Game }}
		obj.{{ .Name }},
		{{- end }}
		{{- range .Statistics.Historical }}
		obj.{{ .Name }},
		{{- end }}
	)
	return result
}